# yaml-language-server: $schema=https://github.com/goreleaser/goreleaser/raw/refs/tags/v2.5.0/www/docs/static/schema.json

version: 2

before:
  hooks:
    - go mod tidy

# Runs 'go build'
builds:
  - flags:
      # If you do not run your builds from a consistent directory structure, pass -trimpath to flags.
      - -trimpath
      - -v

    ldflags:
      # https://www.digitalocean.com/community/tutorials/using-ldflags-to-set-version-information-for-go-applications
      - >-
        -X 'go.jlucktay.dev/version.buildDate={{ .Date }}'
        -X 'go.jlucktay.dev/version.builtBy=GoReleaser'
        -X 'go.jlucktay.dev/version.commit={{ .ShortCommit }}'
        -X 'go.jlucktay.dev/version.executable={{ .ProjectName }}'
        -X 'go.jlucktay.dev/version.version={{ .Version }}'

    env:
      - CGO_ENABLED=0

    # List of combinations of GOOS + GOARCH + GOARM to ignore.
    # Default is empty.
    ignore:
      - goarch: '386'

      - goos: linux
        goarch: arm
        goarm: 7

      - goarm: mips64

      - gomips: hardfloat

      - goamd64: v4

    # Set the modified timestamp on the output binary, typically you would do this to ensure a build was reproducible.
    # Pass empty string to skip modifying the output.
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}

checksum:
  name_template: checksums.txt

snapshot:
  version_template: '{{ incpatch .Version }}-next'

brews:
  - # Name of the recipe
    name: my-github-repos

    # Directory inside the repository to put the formula.
    directory: HomebrewFormula

    # Caveats for the user of your binary.
    caveats: |-
      Please see the README for usage instructions:
      https://github.com/jlucktay/my-github-repos/blob/main/README.md

    # Your app's homepage.
    homepage: https://github.com/jlucktay/my-github-repos

    # Your app's description.
    description: GraphQL-based tool to fetch GitHub repos sorted by creation date

    # SPDX identifier of your app's license.
    license: MIT

    # Setting this will prevent goreleaser to actually try to commit the updated formula - instead, the formula file
    # will be stored on the dist directory only, leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap in case there is an indicator for prerelease
    # in the tag e.g. v1.0.0-rc1
    skip_upload: false

    # So you can `brew test` your formula.
    test: system "#{bin}/my-github-repos --version"

    # Repository to push the generated files to.
    repository:
      # Repository owner.
      owner: jlucktay

      # Repository name.
      name: homebrew-tap

      # Optionally a token can be provided, if it differs from the token provided to GoReleaser.
      token: '{{ .Env.PUBLISH_TO_MY_HOMEBREW_TAP }}'

changelog:
  # Set this to true if you don't want any changelog at all.
  disable: false

  # Changelog generation implementation to use.
  use: github

  # Sorts the changelog by the commit's messages.
  sort: asc

  # Max commit hash length to use in the changelog.
  abbrev: 10

  filters:
    # Commit messages matching the regexp listed here will be removed from the changelog.
    exclude:
      - ^docs
      - ^test
