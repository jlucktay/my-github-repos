name: Go

on:
  push:
    tags:
      - v*
    branches:
      - main

  pull_request:
    branches:
      - main

# Concurrency ensures that only a single workflow using the same concurrency group will run at a time.
# When a workflow is queued in the same repository and concurrency group, any workflow in progress will be cancelled.
# This concurrency group is keyed to the 'ref' property in the 'github' context, to map back to the branch/tag that
# triggered this workflow run.
concurrency:
  cancel-in-progress: true
  group: test_lint_build_release_${{ github.ref }}

jobs:
  build:
    name: Test and lint and build

    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - if: ${{ startsWith(matrix.platform, 'ubuntu-') }}
        name: Update 'make' and run 'make all' on Linux
        run: |-
          sudo apt-get update
          sudo apt-get --only-upgrade install build-essential
          make all

      # Cannot use Docker on macOS runners: https://github.community/t/why-is-docker-not-installed-on-macos/17017
      - if: ${{ startsWith(matrix.platform, 'macos-') }}
        name: Install 'make' and run 'make test' on macOS
        run: |-
          brew install make
          gmake test

  release:
    name: Release 'v*'' tags

    if: ${{ startsWith(github.ref, 'refs/tags/v') }}

    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout ${{ github.repository }} - all history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Confirm that the 'main' branch contains the '${{ github.ref }}' tag
        run: >
          git branch --all --contains '${{ github.ref }}' --no-column --format='%(refname)'
          | grep -c '\/main$'

      - name: Set up Go
        uses: actions/setup-go@v5

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_TO_MY_HOMEBREW_TAP: ${{ secrets.PUBLISH_TO_MY_HOMEBREW_TAP }}
